buildscript {
    ext {
        queryDslVersion = "5.0.0"
        gradleMapstructVersion = "0.2.0"
        mapstructVersion = "1.5.1.Final"
    }

}

//querydsl 추가
buildscript {
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.pretest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.jsonwebtoken:jjwt:0.9.1' // JWT
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"                    // DTO Mapping 처리를 위해 Mapstruct 의존성 추가.
    implementation "org.projectlombok:lombok-mapstruct-binding:${gradleMapstructVersion}"
    implementation 'com.querydsl:querydsl-jpa' //querydsl 추가
    implementation 'com.querydsl:querydsl-apt' //querydsl 추가
    implementation 'it.ozimov:embedded-redis:0.7.3'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"     // DTO Mapping 처리를 위해 Mapstruct 의존성 추가.
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}